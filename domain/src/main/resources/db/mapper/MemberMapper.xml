<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sion.bookstore.domain.member.repository.MemberRepository">

<!--    <resultMap type="sion.bookstore.domain.member.repository.Member" id="member">-->
<!--        <result property="idx" column="idx"/>-->
<!--        <result property="name" column="name"/>-->
<!--        <result property="email" column="email"/>-->
<!--        <result property="password" column="name"/>-->
<!--        <result property="password_salt" column="name"/>-->
<!--        <result property="phone" column="phone"/>-->
<!--        <result property="profileImgPath" column="profile_img_path"/>-->
<!--        <result property="createdAt" column="created_at"/>-->
<!--        <result property="createdBy" column="created_by"/>-->
<!--        <result property="modifiedAt" column="modified_at"/>-->
<!--        <result property="modifiedBy" column="modified_by"/>-->
<!--        <result property="deletedAt" column="deleted_at"/>-->
<!--        <result property="isDeleted" column="is_deleted"/>-->
<!--    </resultMap>-->

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="sion.bookstore.domain.member.repository.Member">
        INSERT into member (name, email, password, password_salt, phone, profile_img_path, created_at, created_by, modified_at, modified_by, deleted)
        values (#{name}, #{email}, #{password},#{passwordSalt}, #{phone}, #{profileImgPath}, #{createdAt}, #{createdBy}, #{modifiedAt}, #{modifiedBy}, #{deleted})
    </insert>

    <!-- TODO * 없애기 -->
    <select id="findOne" resultType="sion.bookstore.domain.member.repository.Member">
        SELECT * FROM member WHERE id = #{id};
    </select>

    <select id="findAll"
            parameterType="sion.bookstore.domain.member.service.MemberSearchCondition"
            resultType="sion.bookstore.domain.member.repository.Member">
        SELECT * FROM member
        <if test="keyword != null and keyword != ''">
            where `name` like CONCAT('%', #{keyword}, '%') or email like CONCAT('%', #{keyword}, '%')
        </if>
        limit #{zeroBasePage}, #{size}
    </select>
    <select id="countAll"
            parameterType="sion.bookstore.domain.member.service.MemberSearchCondition"
            resultType="long">
        SELECT count(*) FROM member
        <if test="keyword != null and keyword != ''">
            where `name` like CONCAT('%', #{keyword}, '%') or email like CONCAT('%', #{keyword}, '%')
        </if>
    </select>

    <update id="update" parameterType="sion.bookstore.domain.member.repository.Member">
        UPDATE member set
            `name` = #{name},
            email = #{email},
            password = #{password},
            password_salt = #{passwordSalt},
            phone = #{phone},
            profile_img_path = #{profileImgPath},
            created_at = #{createdAt},
            created_by = #{createdBy},
            modified_at = #{modifiedAt},
            modified_by = #{modifiedBy},
            deleted = #{deleted}
        WHERE id = #{id};
    </update>

</mapper>