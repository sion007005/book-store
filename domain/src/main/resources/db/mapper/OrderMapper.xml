<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sion.bookstore.domain.order.repository.OrderRepository">
    <sql id="orderColumns">
        member_id, total_price, payment_type, order_status, address_basic, address_detail, zip_code, phone, message, created_at, created_by, modified_at, modified_by, deleted
    </sql>

    <resultMap id="order" type="sion.bookstore.domain.order.repository.Order">
        <result column="id" property="id" />
        <result column="member_id" property="memberId" />
        <result column="total_price" property="totalPrice" />
        <result column="payment_type" property="paymentType" />
        <result column="order_status" property="orderStatus" />
        <result column="address_basic" property="addressBasic" />
        <result column="address_detail" property="addressDetail" />
        <result column="zip_code" property="zipCode" />
        <result column="phone" property="phone" />
        <result column="message" property="message" />
        <result column="created_at" property="createdAt" />
        <result column="created_by" property="createdBy" />
        <result column="modified_at" property="modifiedAt" />
        <result column="modified_by" property="modifiedBy" />
        <result column="deleted" property="deleted" />
        <collection property="items" column = "id"  select="getOrderItemList" javaType="java.util.List" ofType="sion.bookstore.domain.order.repository.OrderItem"></collection>
    </resultMap>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="sion.bookstore.domain.order.repository.Order">
        INSERT into `order` (<include refid="orderColumns" />)
        values (#{memberId}, #{totalPrice}, #{paymentType},#{orderStatus}, #{addressBasic}, #{addressDetail}, #{zipCode},  #{phone}, #{message}, #{createdAt}, #{createdBy}, #{modifiedAt}, #{modifiedBy}, #{deleted})
    </insert>

    <select id="findOneById" resultType="sion.bookstore.domain.order.repository.Order">
        SELECT id, <include refid="orderColumns" />
        FROM `order` WHERE id = #{id}
    </select>

    <select id="findAllByMemberId"
            resultType="sion.bookstore.domain.order.repository.Order"
            parameterType="sion.bookstore.domain.order.service.OrderSearchCondition">
        SELECT id, <include refid="orderColumns" />
        FROM `order` WHERE member_id = #{memberId}
        limit #{searchStartIndex}, #{size}
    </select>

    <update id="update" useGeneratedKeys="true" keyProperty="id" parameterType="sion.bookstore.domain.order.repository.Order">
        UPDATE `order` set
            member_id = #{memberId},
            total_price = #{totalPrice},
            payment_type = #{paymentType},
            order_status = #{orderStatus},
            address_basic = #{addressBasic},
            address_detail = #{addressDetail},
            zip_code = #{zipCode},
            phone = #{phone},
            message = #{message},
            created_at = #{createdAt},
            created_by = #{createdBy},
            modified_at = #{modifiedAt},
            modified_by = #{modifiedBy},
            deleted = #{deleted}
        WHERE id = #{id};
    </update>

    <select id="countAll" resultType="long">
    SELECT count(*)
    FROM(SELECT id, <include refid="orderColumns" />
        FROM `order` WHERE member_id = #{memberId})
    count
    </select>
</mapper>