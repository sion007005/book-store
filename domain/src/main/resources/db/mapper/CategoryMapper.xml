<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sion.bookstore.domain.category.repository.CategoryRepository">
    <sql id="categoryColumns">
        parent_id, `name`, `level`, `order`, `link`, created_at, created_by, modified_at, modified_by, deleted
    </sql>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="sion.bookstore.domain.category.repository.Category">
        INSERT into category (<include refid="categoryColumns" />)
        values (#{parentId}, #{name}, #{level}, #{order}, #{link}, #{createdAt}, #{createdBy}, #{modifiedAt}, #{modifiedBy}, #{deleted})
    </insert>

    <select id="findOneById" resultType="sion.bookstore.domain.category.repository.Category">
        SELECT id, <include refid="categoryColumns" />
        FROM category WHERE id = #{id};
    </select>

    <select id="findOneWithSameOrder"
            parameterType="sion.bookstore.domain.category.repository.Category"
            resultType="sion.bookstore.domain.category.repository.Category">
        SELECT id, <include refid="categoryColumns" />
        FROM category
        WHERE parent_id = #{parentId} and `order` = #{order}
    </select>

    <select id ="findAllWithSameParentId"
            parameterType="sion.bookstore.domain.category.repository.Category"
            resultType="sion.bookstore.domain.category.repository.Category">
        SELECT id, <include refid="categoryColumns" />
        FROM category WHERE parent_id = #{parentId}
        <if test="id != null">
            and id != #{id}
        </if>
        ORDER BY `order`
    </select>

    <select id="findAllByCategoryLevel"
            parameterType="int"
            resultType="sion.bookstore.domain.category.repository.Category">
        SELECT  id, <include refid="categoryColumns" />
        FROM category where level = #{level};
    </select>

    <select id="findOthersWithSameLevel"
            parameterType="sion.bookstore.domain.category.repository.CategorySearchRange"
            resultType="sion.bookstore.domain.category.repository.Category">
        SELECT id, <include refid="categoryColumns" />
        FROM category where parent_id = #{parentId} and `order` >= #{start}
        <if test="end != null">
            and #{end} > `order`
        </if>
        order by `order` asc;
    </select>

    <select id="findAllCategories"
            parameterType="sion.bookstore.domain.category.service.CategorySearchCondition"
            resultType="sion.bookstore.domain.category.repository.Category">
        SELECT id, <include refid="categoryColumns" />
        FROM category
        <if test="keyword != null and keyword != ''">
            where `name` like CONCAT('%', #{keyword}, '%')
        </if>
        order by id asc
        limit #{zeroBasePage}, #{size}
    </select>

    <select id="countAll"
            parameterType="sion.bookstore.domain.category.service.CategorySearchCondition"
            resultType="long">
        SELECT count(*) FROM category
        <if test="keyword != null and keyword != ''">
            where `name` like CONCAT('%', #{keyword}, '%')
        </if>
    </select>

    <update id="update" useGeneratedKeys="true" keyProperty="id" parameterType="sion.bookstore.domain.category.repository.Category">
        UPDATE category set
            parent_id = #{parentId},
            `name` = #{name},
            `level` = #{level},
            `order` = #{order},
            created_at = #{createdAt},
            created_by = #{createdBy},
            modified_at = #{modifiedAt},
            modified_by = #{modifiedBy},
            deleted = #{deleted}
        WHERE id = #{id};
    </update>

</mapper>